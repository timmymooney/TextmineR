% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_documents_for_embedding.R
\name{process_documents_for_embedding}
\alias{process_documents_for_embedding}
\title{Clean Texts Ready for Embedding}
\usage{
process_documents_for_embedding(
  data,
  text_var,
  to_lower = FALSE,
  remove_punctuation = FALSE,
  in_parallel = FALSE
)
}
\arguments{
\item{data}{A tibble or data frame object}

\item{text_var}{The text variable or documents to be cleaned for the embedding process}

\item{to_lower}{Whether to make text lowercase, the default option is FALSE}

\item{remove_punctuation}{Whether to remove all forms of punctuation from the text variable, the default option is FALSE}

\item{in_parallel}{Whether to utilize parallel processing and split the job across cores, in order to process faster. The default option is FALSE}
}
\value{
Returns the data object with the provided text_var cleaned and ready to begin language embedding
}
\description{
Clean Texts Ready for Embedding
}
\details{
By performing various cleaning steps, the `process_documents_for_embedding` function is designed to prepare text data for embedding. It is particularly useful for pre-processing texts before applying them to any natural language processing (NLP) or transformer model such as those hosted on Hugging Face and similar. The key cleaning steps include:

-  URLs: Removes most forms of URL link.
- Hashtags: Removes hashtags.
- Mentions: Removes user mentions or handle tags.
- Emojis: Removes any emojis or non-ASCII characters from text.
- Punctuation: Removes all punctuation (optional).
- Cleaning Digits: Removes any digits found at the very start of documents but not any others.
- Removing Non-English Symbols: Excludes non-English symbols, preserving only alphanumeric characters, punctuation, and spaces.
- Handling Multiple Spaces: Reduces consecutive spaces to a single space, addressing any excess spacing, wile also cleaning any spaces that may start documents.

The function provides the option to make all texts lower-case by calling to_lower = TRUE, as well as execute all of the above cleaning steps in parallel, by calling in_parallel = TRUE. This is typically performed to leverage multiple CPU cores for efficiency when working with slightly larger data sets with many documents. Overall, this serves as a versatile tool to enhance the quality of textual data before any further analysis or embedding is conducted.
}
\examples{
output <- data \%>\%
 TextmineR::process_documents_for_embedding(text_var = texts)

output <- data \%>\%
 TextmineR::process_documents_for_embedding(text_var = texts,
                                            to_lower = TRUE,
                                            remove_punctuation = TRUE,
                                            in_parallel = TRUE)
}
